version: '3.8'

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: love-rank-pulse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-loverank}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-loverank_dev_password}
      POSTGRES_DB: ${POSTGRES_DB:-loverank_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/api-gateway/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-loverank} -d ${POSTGRES_DB:-loverank_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - love-rank-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: love-rank-pulse-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_dev_password}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - love-rank-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: PgAdmin for database management (dev only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: love-rank-pulse-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@loverank.local}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - love-rank-network
    profiles:
      - dev
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

  # Optional: Redis Commander for Redis management (dev only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: love-rank-pulse-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:${REDIS_PASSWORD:-redis_dev_password}
    ports:
      - "${REDIS_COMMANDER_PORT:-8081}:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - love-rank-network
    profiles:
      - dev
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
    name: love-rank-postgres-data
  redis_data:
    driver: local
    name: love-rank-redis-data
  pgadmin_data:
    driver: local
    name: love-rank-pgadmin-data

# Network for service communication
networks:
  love-rank-network:
    driver: bridge
    name: love-rank-network
    ipam:
      config:
        - subnet: 172.28.0.0/16
